#!/usr/bin/env python3
# coding=utf-8

'''Make network profiles
'''

# Standard library imports.
import sys
import atexit
import os
import gc
import logging
from os import access, R_OK
from os.path import join, splitext

# Related third party imports.
import yaml

# Local application/library specific imports.
# import app_specific_mod

# Relevant ``__all__`` specification here.
# __all__ = ...

# GLOBAL CONSTANT names.  *if main* section at bottom sets global names too.
# Program name from file name.
PN = os.path.splitext(sys.argv[0])[0]
LOGGING_FMT = '[{0}]: %(message)s'.format(PN)
DATA_DIR = './_data'
DATA_FP = join(DATA_DIR, 'network_profiles.yml')
SITE_CFG_FP = './_config.yml'
NETWORK_INCLUDE_ROOT_FP = './_includes/network_profiles'
NETWORKS_INCLUDE = {
        'text': {
            'all': join(NETWORK_INCLUDE_ROOT_FP, 'text', 'all.html'),
            'frontpage': join(NETWORK_INCLUDE_ROOT_FP, 'text', 'frontpage.html')
            },
        'buttons': {
            'all': join(NETWORK_INCLUDE_ROOT_FP, 'buttons', 'all.html'),
            'frontpage': join(NETWORK_INCLUDE_ROOT_FP, 'buttons', 'frontpage.html')
            }
        }
ROOTFP = '.'
DATA = None

def has_image_button_file(network):
    networkfp = join(ROOTFP, SITE_CFG['images_dir'], 'buttons', network['id'])
    networkfp += '.png'
    return access(networkfp, R_OK)

def add_tags(datafp=DATA_FP, data=DATA):
    tagsfield = ['frontpage', 'about', 'contact', 'connect']
    for inetwork in DATA['profiles']:
        inetwork['tags'] = tagsfield.copy()

    with open(DATA_FP, 'w') as f:
        yaml.dump(DATA, f, default_flow_style=False)

def build_text_html(entries):
    text_tmpl_entry = DATA['text_tmpl_entry']
    return ''.join([text_tmpl_entry.format(
        site_baseurl=SITE_CFG['baseurl'],
        uri=inetwork['uri'],
        network=inetwork['network'])
        for inetwork in entries])

def build_buttons_html(entries):
    return ''.join([
        DATA['buttons_tmpl_entry'].format(site_baseurl=SITE_CFG['baseurl'],
        uri=inetwork['uri'],
        network=inetwork['network'],
        title=inetwork['network'],
        site_images_dir=SITE_CFG['images_dir'],
        id=inetwork['id'],
        site_button_img_size=SITE_CFG['button_img_size'])
        for inetwork in entries
        if has_image_button_file(inetwork)])

logging.basicConfig(format=LOGGING_FMT, level=logging.INFO)

with open(SITE_CFG_FP) as f:
    SITE_CFG = yaml.safe_load(f.read())

with open(DATA_FP) as f:
    DATA = yaml.safe_load(f.read())

# all
# text
text = build_text_html(DATA['profiles'])
with open(NETWORKS_INCLUDE['text']['all'], 'w') as f:
    f.write(DATA['text_tmpl'].format(entries=text))
# buttons
buttons = build_buttons_html(DATA['profiles'])
with open(NETWORKS_INCLUDE['buttons']['all'], 'w') as f:
    f.write(DATA['buttons_tmpl'].format(entries=buttons))
